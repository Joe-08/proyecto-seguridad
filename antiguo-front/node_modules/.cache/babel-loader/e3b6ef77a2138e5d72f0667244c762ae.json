{"ast":null,"code":"var _jsxFileName = \"/home/joe/Escritorio/seguridad/password-manager-frontend/src/components/organisms/AccountCreation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Flex, Box, Heading, FormControl, FormLabel, Input, Button, List, ListItem, ListIcon, useColorMode, Alert, AlertIcon, AlertTitle, AlertDescription, Text } from '@chakra-ui/react';\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nfunction makeid(length) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+~`-=[];';\n  var charactersLength = characters.length;\n\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n\n  return result;\n}\n\nconst AccountCreation = props => {\n  _s();\n\n  const [submitted, setSubmitted] = useState(false);\n  const [securePassword, setSecurePassword] = useState(\"\");\n\n  const generatePassword = () => {\n    setSecurePassword(makeid(20));\n  };\n\n  const initialValues = {\n    username: '',\n    password: ''\n  };\n  const {\n    control,\n    register,\n    handleSubmit,\n    reset,\n    trigger,\n    setError,\n    formState\n  } = useForm({\n    defaultValues: initialValues\n  });\n\n  const handleAccountAddition = async data => {};\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    width: \"100%\",\n    justifyContent: \"center\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      width: \"90%\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Heading, {\n          as: 'h3',\n          size: 'lg',\n          children: \"Agrega una cuenta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        p: 8,\n        width: \"100%\",\n        borderWidth: 1,\n        borderRadius: 8,\n        boxShadow: \"lg\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit(async data => {\n              handleAccountAddition(data);\n              reset(initialValues);\n            }),\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(FormControl, {\n                p: 2,\n                isRequired: true,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  display: 'flex',\n                  as: 'legend',\n                  alignItems: 'center',\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Input, {\n                  name: 'username',\n                  placeholder: 'Username'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              isRequired: true,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                display: 'flex',\n                as: 'legend',\n                alignItems: 'center',\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: 'password',\n                placeholder: 'Password',\n                value: securePassword,\n                type: 'password'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: generatePassword,\n              children: \"Genera una contrase\\xF1a segura\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AccountCreation, \"nqTuc48NeL2AijuOuJeuU/5Gztk=\", false, function () {\n  return [useForm];\n});\n\n_c = AccountCreation;\nexport default AccountCreation;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountCreation\");","map":{"version":3,"sources":["/home/joe/Escritorio/seguridad/password-manager-frontend/src/components/organisms/AccountCreation.js"],"names":["React","useState","styled","Flex","Box","Heading","FormControl","FormLabel","Input","Button","List","ListItem","ListIcon","useColorMode","Alert","AlertIcon","AlertTitle","AlertDescription","Text","useForm","useFieldArray","Controller","Container","div","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","AccountCreation","props","submitted","setSubmitted","securePassword","setSecurePassword","generatePassword","initialValues","username","password","control","register","handleSubmit","reset","trigger","setError","formState","defaultValues","handleAccountAddition","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport {\n    Flex, Box, Heading, FormControl, FormLabel,\n    Input, Button, List, ListItem, ListIcon, useColorMode,\n    Alert, AlertIcon, AlertTitle, AlertDescription,\n    Text\n} from '@chakra-ui/react';\nimport { useForm, useFieldArray, Controller } from \"react-hook-form\";\n\nconst Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`;\n\nfunction makeid(length) {\n    var result           = '';\n    var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+~`-=[];';\n    var charactersLength = characters.length;\n    for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * \n charactersLength));\n   }\n   return result;\n}\n\nconst AccountCreation = (props) => {\n    const [submitted, setSubmitted] = useState(false);\n    const [securePassword, setSecurePassword] = useState(\"\");\n\n    const generatePassword = () => {\n        setSecurePassword(makeid(20));\n    };    \n\n    const initialValues = {\n        username: '',\n        password: ''\n    };\n\n    const { control, register, handleSubmit, reset, trigger, setError, formState } = useForm({\n        defaultValues: initialValues\n    });\n\n    const handleAccountAddition = async data => {\n        \n    }\n\n    return (\n        <Flex width=\"100%\" justifyContent=\"center\">\n            <Box p={2} width={\"90%\"}>\n                <Box textAlign=\"center\">\n                    <Heading as={'h3'} size={'lg'}>Agrega una cuenta</Heading>\n                </Box>\n                <Box p={8} width={\"100%\"} borderWidth={1} borderRadius={8} boxShadow={\"lg\"}>\n                    <Box>\n                        <form onSubmit={handleSubmit(async data => { handleAccountAddition(data); reset(initialValues); })}>\n                            <Box>\n                                <FormControl p={2} isRequired>\n                                    <FormLabel display={'flex'} as={'legend'} alignItems={'center'}>\n                                        Username\n                                    </FormLabel>\n                                    <Input name={'username'} placeholder={'Username'}/>\n                                </FormControl>\n                            </Box>\n                            <FormControl isRequired>\n                                <FormLabel display={'flex'} as={'legend'} alignItems={'center'}>\n                                    Password\n                                </FormLabel>\n                                <Input name={'password'} placeholder={'Password'} value={securePassword} type={'password'}/>\n                            </FormControl>\n                            <Button onClick={generatePassword}>\n                                Genera una contraseña segura\n                            </Button>\n                        </form>\n                    </Box>\n                </Box>\n            </Box>\n        </Flex>\n    );\n};\n\nexport default AccountCreation;"]},"metadata":{},"sourceType":"module"}